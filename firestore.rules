rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Rule for the 'users' collection
    match /users/{userId} {
      // Admins can write to any user document for management purposes.
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      // An authenticated user can read their own document, or an admin can read any document.
      allow read: if request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rule for the 'cana_data' collection
    match /cana_data/{areaId} {
      // Any authenticated user can read the area data.
      allow read: if request.auth != null;
      
      // Only admins can create or delete areas.
      allow create, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      
      // Any authenticated user can update an area (e.g., to add an inspection).
      // The UI will control which fields are editable by whom.
      allow update: if request.auth != null;
    }
  }
}
